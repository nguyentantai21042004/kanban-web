apiVersion: apps/v1
kind: Deployment
metadata:
  name: kanban-web
  namespace: kanban
  labels:
    app: kanban-web
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kanban-web
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kanban-web
      namespace: kanban
    spec:
      imagePullSecrets:
      - name: harbor-secret
      containers:
      - name: kanban-web
        image: harbor.ngtantai.pro/kanban/kanban-web:250803-184842
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: kanban-web-config
              key: NODE_ENV
        - name: NEXT_PUBLIC_API_URL
          valueFrom:
            configMapKeyRef:
              name: kanban-web-config
              key: NEXT_PUBLIC_API_URL
        - name: NEXT_PUBLIC_WEBSOCKET_URL
          valueFrom:
            configMapKeyRef:
              name: kanban-web-config
              key: NEXT_PUBLIC_WEBSOCKET_URL
        - name: NEXT_PUBLIC_APP_URL
          valueFrom:
            configMapKeyRef:
              name: kanban-web-config
              key: NEXT_PUBLIC_APP_URL
        - name: CONTAINER_NAME
          value: "kanban-web"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: kanban-web-service
  namespace: kanban
  labels:
    app: kanban-web
spec:
  selector:
    app: kanban-web
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kanban-web-ingress
  namespace: kanban
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60s"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60s"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60s"
spec:
  ingressClassName: nginx
  rules:
  - host: kanban.ngtantai.pro
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kanban-web-service
            port:
              number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kanban-web-config
  namespace: kanban
data:
  NODE_ENV: "production"
  NEXT_PUBLIC_API_URL: "https://kanban-api.ngtantai.pro"
  NEXT_PUBLIC_APP_URL: "https://kanban.ngtantai.pro"
  NEXT_PUBLIC_WEBSOCKET_URL: "wss://kanban-api.ngtantai.pro"