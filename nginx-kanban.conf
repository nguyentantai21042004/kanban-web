upstream k8s_nodes {
    server 172.16.21.31:30080 max_fails=3 fail_timeout=30s;
    server 172.16.21.32:30080 max_fails=3 fail_timeout=30s;
    server 172.16.21.33:30080 max_fails=3 fail_timeout=30s;
}

server {
    listen 80;
    server_name kanban.ngtantai.pro;

    # MIME types for static files
    location ~* \.(webmanifest|json)$ {
        add_header Content-Type application/manifest+json;
        proxy_pass http://k8s_nodes;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        proxy_pass http://k8s_nodes;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Additional headers for Next.js
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    location /nginx-health {
        return 200 "kanban HTTP healthy\n";
        add_header Content-Type text/plain;
    }
}

# HTTPS server for kanban
server {
    listen 443 ssl http2;
    server_name kanban.ngtantai.pro;

    ssl_certificate /etc/nginx/ssl-certs/kanban.ngtantai.pro/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl-certs/kanban.ngtantai.pro/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # MIME types for static files
    location ~* \.(webmanifest|json)$ {
        add_header Content-Type application/manifest+json;
        proxy_pass http://k8s_nodes;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }

    location / {
        proxy_pass http://k8s_nodes;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;  # Tell K8s it's HTTPS
        
        # Additional headers for Next.js
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Gzip compression
        proxy_set_header Accept-Encoding gzip;
    }

    location /nginx-health {
        return 200 "kanban HTTPS healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Health check for Kubernetes
    location /health {
        return 200 "kanban app healthy\n";
        add_header Content-Type text/plain;
    }
} 